- `/var/cache/nginx`: 캐시 디렉토리 지정
# - `levels=1:2`: 단일 디렉토리에 너무 많은 파일이 있는 경우 파일 엑세스 속도 줄어들 수 있으므로 2단계 설정
# - `keys_zone=STATIC:10m`: "STATIC"라는 이름의 캐시 키에 대한 공유 메모리 영역을 정의하고 크기 제한
# - `inactive=7d`: 7일 동안 액세스 하지 않는 캐시 제거
# - `use_temp_path=off`: 캐시 디렉토리에 직접 파일을 기록하고 데이터를 임시 저장 영역에 먼저 복사하지 않음
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

# nextjs
# `nextjs`명칭은 `docker-compose.yml`에 정의되어 있는 명칭을 따른다
upstream nextjs_upstream {
  server nextjs:3000;
	# server 127.0.0.1:3000;
}

# default server
server {
  listen 80 default_server;

  server_name _;

  server_tokens off;

  # GZIP 설정
  # `gzip on`: gzip 활성화
  # `gzip_proxied any`: nginx에 모든 프록시 파일을 gzip으로 압축 할 수 있음을 알려줌
  # `gzip_comp_level 4`: 압축수준. 4는 일반적인 수준
  # `gzip_types `: 압축유형
  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css text/html application/javascript image/svg+xml;
  
  proxy_http_version 1.1;
  proxy_cache_bypass $http_upgrade;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-Port $server_port;

  # nextjs 정적 파일 캐시 정책
  # 빌드ID가 있으므로 브라우저 캐시 헤더가 영구적으로 캐싱.
  # 리빌드 시에는 URL이 변경되므로 달라짐
  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://nextjs_upstream;

    # cache 테스트용. 프로덕션에서는 삭제
    add_header X-Cache-Status $upstream_cache_status;
  }

  # static 파일 캐시 컨트롤
  # `Cache-Control`이 포함된 파일의 캐시 설정(설정 안할시 no-cache 로 설정안됨)
  # 60분동안 캐시
  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://nextjs_upstream;

    # cache 테스트용. 프로덕션에서는 삭제
    add_header X-Cache-Status $upstream_cache_status;
  }

  # nextjs 라우팅
  location / {
    proxy_pass http://nextjs_upstream;
  }